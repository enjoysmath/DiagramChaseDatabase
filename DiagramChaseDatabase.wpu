#!wing
#!version=8.0
##################################################################
# Wing project file : User-specific branch                       #
##################################################################
[user attributes]
debug.err-values = {loc('manage.py'): {}}
debug.show-args-dialog = {loc('database/memgraph_conn.py'): False,
                          loc('manage.py'): False}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'yW0IeVO3K1lPsNQ60PTS4x97uYv0Rf3Z',
        'size-state': 'maximized',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [0,
                                   2],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.12480417754569195,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [(2,),
        (10,),
        (12,)],
                                 'selected-nodes': [(2,
        4)],
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {loc('../SoundUnited/ETMADB/output/bin/library/script_base.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../SoundUnited/ETMADB/output/bin/library/script_base.py'),
                      'ScriptBase')]},
        loc('../SoundUnited/ETMADB/output/bin/scripts/MiniAX_DolbyAtmostLatencyTestProcess.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../SoundUnited/ETMADB/output/bin/scripts/MiniAX_DolbyAtmostLatencyTestProcess.py'),
                      'Script')]},
        loc('../SoundUnited/ETMADB/output/core/murideo_command.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../SoundUnited/ETMADB/output/core/murideo_command.py'),
                      'hex_string_to_int')]},
        loc('../SoundUnited/ETMADB/output/core/murideo_connection.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../SoundUnited/ETMADB/output/core/murideo_connection.py'),
                      'MurideoConnection')]},
        loc('../SoundUnited/ETMADB/output/core/run_script_thread.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../SoundUnited/ETMADB/output/core/run_script_thread.py'),
                      'RunScriptThread')]},
        loc('../SoundUnited/ETMADB/output/dialog/main_window.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../SoundUnited/ETMADB/output/dialog/main_window.py'),
                      'MainWindow')]},
        loc('../SoundUnited/ETMADB/output/dialog/run_script_dialog.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../SoundUnited/ETMADB/output/dialog/run_script_dialog.py'),
                      'RunScriptDialog')]},
        loc('BSSExport/cd_editor/cd_editor.html'): {'expanded-nodes': [],
        'selected-nodes': [None],
        'top-node': None},
        loc('BSSExport/error.log'): {'expanded-nodes': [],
                                     'selected-nodes': [],
                                     'top-node': None},
        loc('DiagramChaseDatabase/settings.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('DiagramChaseDatabase/settings.py'),
                      'ALLOWED_HOSTS')]},
        loc('DiagramChaseDatabase/static/css/styles.css'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('cd_editor/templates/cd_editor.html'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('cd_editor/views.py'): {'expanded-nodes': [],
                                    'selected-nodes': [[('function def',
        loc('cd_editor/views.py'),
        'cd_editor')]],
                                    'top-node': [('function def',
        loc('cd_editor/views.py'),
        'cd_editor')]},
        loc('database/memgraph_conn.py'): {'expanded-nodes': [],
        'selected-nodes': [None],
        'top-node': None},
        loc('database/models.py'): {'expanded-nodes': [],
                                    'selected-nodes': [],
                                    'top-node': None},
        loc('static/DiagramChaseDatabase/css/styles.css'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('unknown:<untitled> #20'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('unknown:<untitled> #21'),
                      'hex_string_to_int')]}},
                                'browse_mode': 'Current Module',
                                'follow-selection': False,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {'Derived Classes': False,
        'Imported': False,
        'Modules': True}}),
                              ('snippets',
                               'tall',
                               0,
                               {'tree-states': {'__all__': [],
        'c': [],
        'django': [],
        'html': [],
        'py': []}}),
                              ('refactoring',
                               'tall',
                               0,
                               {}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {'codeline-mode': 'below'}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [1,
                          0],
        'notebook_display': 'normal',
        'notebook_percent': 0.3680336487907466,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': 'dirs',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': '", ',
                                       'fReverse': False,
                                       'fSearchText': 'relationship',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': True,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False}}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-breakpoints',
                      'wide',
                      0,
                      {'tree-state': []}),
                     ('testing',
                      'wide',
                      0,
                      {'added-files': [loc('manage.py')],
                       'filter': '',
                       'recent-filters': None,
                       'sort-order': 'alpha',
                       'tree-state': {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': (0,)}}),
                     ('uses',
                      'wide',
                      0,
                      {}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      1,
                      {}),
                     ('debug-watch',
                      'wide',
                      1,
                      {'node-states': [('eval',
        'data'),
                                       ('eval',
        'codes'),
                                       ('eval',
        'data'),
                                       ('eval',
        'data'),
                                       ('eval',
        'j+1'),
                                       ('eval',
        'formula'),
                                       ('eval',
        'stdout'),
                                       ('eval',
        'self._buffer'),
                                       ('eval',
        'string'),
                                       ('eval',
        'stderr'),
                                       ('eval',
        'max_abs'),
                                       ('eval',
        'max_abs'),
                                       ('eval',
        'max_abs'),
                                       ('eval',
        'twin_primes')],
                       'tree-state': {'expanded-nodes': [],
                                      'selected-nodes': [(13,)],
                                      'top-node': (0,)}}),
                     ('debug-modules',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': '',
                       'first-line': 0,
                       'folded-linenos': [],
                       'history': {},
                       'launch-id': None,
                       'sel-line': 2,
                       'sel-line-start': 94,
                       'selection_end': 94,
                       'selection_start': 94,
                       'zoom': 0}),
                     ('bookmarks',
                      'wide',
                      1,
                      {'filter-text': ''}),
                     ('messages',
                      'wide',
                      2,
                      {'current-domain': 0})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('../../../../../../Python38/Lib/site-packages/pydantic/main.py'),
        {'attrib-starts': [('BaseModel|0|',
                            310),
                           ('BaseModel|0|.__init__|0|',
                            332)],
         'code-line': '            raise validation_error\r\n',
         'first-line': 327,
         'folded-linenos': [],
         'sel-line': 341,
         'sel-line-start': 14722,
         'selection_end': 14722,
         'selection_start': 14722,
         'zoom': 0},
        1674497114.329051],
        [loc('database/models.py'),
         {'attrib-starts': [('Object|0|',
                             7)],
          'code-line': '   id:int = Field(index=True, exist=True, unique=True, db=mg)\r\n',
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 8,
          'sel-line-start': 255,
          'selection_end': 296,
          'selection_start': 296,
          'zoom': 0},
         1674497177.5075467],
        [loc('DiagramChaseDatabase/views.py'),
         {'attrib-starts': [],
          'code-line': 'from django.shortcuts import render\r\n',
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 0,
          'sel-line-start': 0,
          'selection_end': 0,
          'selection_start': 0,
          'zoom': 0},
         1674497178.4097633],
        [loc('database/views.py'),
         {'attrib-starts': [('test_memgraph|0|',
                             6)],
          'code-line': '   X = Object(latex="A", id=)\r\n',
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 9,
          'sel-line-start': 197,
          'selection_end': 226,
          'selection_start': 222,
          'zoom': 0},
         1674497496.15241],
        [loc('database/models.py'),
         {'attrib-starts': [],
          'code-line': 'class Diagram(Nod\r\n',
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 15,
          'sel-line-start': 441,
          'selection_end': 458,
          'selection_start': 458,
          'zoom': 0},
         1674497502.9035676],
        [loc('database/views.py'),
         {'attrib-starts': [('test_memgraph|0|',
                             6)],
          'code-line': '   X = Object(latex="A", id=)\r\n',
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 9,
          'sel-line-start': 197,
          'selection_end': 197,
          'selection_start': 197,
          'zoom': 0},
         1674497506.292185],
        [loc('DiagramChaseDatabase/views.py'),
         {'attrib-starts': [],
          'code-line': 'from django.shortcuts import render\r\n',
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 0,
          'sel-line-start': 0,
          'selection_end': 0,
          'selection_start': 0,
          'zoom': 0},
         1674497507.9022303],
        [loc('database/models.py'),
         {'attrib-starts': [('Diagram|0|',
                             14),
                            ('Diagram|0|.create_object|0|',
                             17)],
          'code-line': '      print(query)',
          'first-line': 3,
          'folded-linenos': [],
          'sel-line': 19,
          'sel-line-start': 674,
          'selection_end': 692,
          'selection_start': 692,
          'zoom': 6},
         1674497896.2040446],
        [loc('DiagramChaseDatabase/views.py'),
         {'attrib-starts': [],
          'code-line': 'from django.shortcuts import render\r\n',
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 0,
          'sel-line-start': 0,
          'selection_end': 0,
          'selection_start': 0,
          'zoom': 0},
         1674497896.8038342],
        [loc('database/views.py'),
         {'attrib-starts': [('test_memgraph|0|',
                             6)],
          'code-line': '   \r\n',
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 11,
          'sel-line-start': 277,
          'selection_end': 280,
          'selection_start': 280,
          'zoom': 0},
         1674497961.9169855],
        [loc('database/models.py'),
         {'attrib-starts': [('Object|0|',
                             7)],
          'code-line': '   latex:str = Field(index=True, max_length=MAX_LATEX_LENGTH)\r\n',
          'first-line': 3,
          'folded-linenos': [],
          'sel-line': 9,
          'sel-line-start': 315,
          'selection_end': 331,
          'selection_start': 331,
          'zoom': 6},
         1674497963.7413075],
        [loc('database/views.py'),
         {'attrib-starts': [('test_memgraph|0|',
                             6)],
          'code-line': '   X = D.create_object(latex="X")\r\n',
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 10,
          'sel-line-start': 241,
          'selection_end': 269,
          'selection_start': 269,
          'zoom': 0},
         1674498003.8485837],
        [loc('../../../../../../Python38/Lib/site-packages/gqlalchemy/exceptions.py'),
         {'attrib-starts': [('connection_handler|0|',
                             211),
                            ('connection_handler|0|._handler|0|',
                             225)],
          'code-line': '                    raise GQLAlchemyWaitForConnectionError from ex\n',
          'first-line': 206,
          'folded-linenos': [],
          'sel-line': 234,
          'sel-line-start': 7246,
          'selection_end': 7246,
          'selection_start': 7246,
          'zoom': 0},
         1674498007.9064798],
        [loc('../../../../../../Python38/Lib/site-packages/gqlalchemy/connection.py'),
         {'attrib-starts': [('MemgraphConnection|0|',
                             62),
                            ('MemgraphConnection|0|.__init__|0|',
                             63)],
          'code-line': '        self._connection = self._create_connection()\n',
          'first-line': 47,
          'folded-linenos': [],
          'sel-line': 77,
          'sel-line-start': 2344,
          'selection_end': 2344,
          'selection_start': 2344,
          'zoom': 0},
         1674498011.5983043],
        [loc('database/models.py'),
         {'attrib-starts': [],
          'code-line': 'from gqlalchemy import Memgraph, Node, Relationship, Field, Match\r\n',
          'first-line': 3,
          'folded-linenos': [],
          'sel-line': 0,
          'sel-line-start': 0,
          'selection_end': 33,
          'selection_start': 33,
          'zoom': 6},
         1674498081.0452356],
        [loc('database/views.py'),
         {'attrib-starts': [('test_memgraph|0|',
                             6)],
          'code-line': '   X = D.create_object(latex="X", mg=mg)\r\n',
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 10,
          'sel-line-start': 241,
          'selection_end': 280,
          'selection_start': 280,
          'zoom': 0},
         1674498122.1437593],
        [loc('../../../../../../Python38/Lib/site-packages/gqlalchemy/exceptions.py'),
         {'attrib-starts': [('connection_handler|0|',
                             211),
                            ('connection_handler|0|._handler|0|',
                             225)],
          'code-line': '                    raise GQLAlchemyWaitForConnectionError from ex\n',
          'first-line': 206,
          'folded-linenos': [],
          'sel-line': 234,
          'sel-line-start': 7246,
          'selection_end': 7246,
          'selection_start': 7246,
          'zoom': 0},
         1674498438.6211557],
        [loc('../../../../../../Python38/Lib/site-packages/gqlalchemy/query_builders/declarative_base.py'),
         {'attrib-starts': [('DeclarativeBase|0|',
                             622),
                            ('DeclarativeBase|0|.execute|0|',
                             1448)],
          'code-line': '            return self._connection.execute_and_fetch(query)\n',
          'first-line': 1426,
          'folded-linenos': [],
          'sel-line': 1456,
          'sel-line-start': 54478,
          'selection_end': 54478,
          'selection_start': 54478,
          'zoom': 0},
         1674498442.4970489],
        [loc('database/views.py'),
         {'attrib-starts': [('test_memgraph|0|',
                             6)],
          'code-line': '   D = Diagram(name="My Diagram").save(mg)\r\n',
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 9,
          'sel-line-start': 197,
          'selection_end': 239,
          'selection_start': 239,
          'zoom': 0},
         1675290094.9615514],
        [loc('database/models.py'),
         {'attrib-starts': [],
          'code-line': '\r\n',
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 6,
          'sel-line-start': 220,
          'selection_end': 220,
          'selection_start': 220,
          'zoom': 6},
         1675290196.4941206],
        (loc('database/memgraph_conn.py'),
         {'attrib-starts': [],
          'code-line': 'def get_memgraph(request=None):\r\n',
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 9,
          'sel-line-start': 319,
          'selection_end': 335,
          'selection_start': 323,
          'zoom': 0},
         1675290208.4509575)],
        19),
        'current-loc': loc('database/models.py'),
        'editor-state-list': [(loc('../../../../../../Python38/Lib/site-packages/gqlalchemy/connection.py'),
                               {'attrib-starts': [('MemgraphConnection|0|',
        62),
        ('MemgraphConnection|0|.__init__|0|',
         63)],
                                'code-line': '        self._connection = self._create_connection()\n',
                                'first-line': 47,
                                'folded-linenos': [],
                                'sel-line': 77,
                                'sel-line-start': 2344,
                                'selection_end': 2344,
                                'selection_start': 2344,
                                'zoom': 0}),
                              (loc('database/views.py'),
                               {'attrib-starts': [('test_memgraph|0|',
        6)],
                                'code-line': '   D = Diagram(name="My Diagram").save(mg)\r\n',
                                'first-line': 0,
                                'folded-linenos': [],
                                'sel-line': 9,
                                'sel-line-start': 197,
                                'selection_end': 239,
                                'selection_start': 239,
                                'zoom': 0}),
                              (loc('../../../../../../Python38/Lib/site-packages/gqlalchemy/query_builders/declarative_base.py'),
                               {'attrib-starts': [('DeclarativeBase|0|',
        622),
        ('DeclarativeBase|0|.execute|0|',
         1448)],
                                'code-line': '            return self._connection.execute_and_fetch(query)\n',
                                'first-line': 1426,
                                'folded-linenos': [],
                                'sel-line': 1456,
                                'sel-line-start': 54478,
                                'selection_end': 54478,
                                'selection_start': 54478,
                                'zoom': 0}),
                              (loc('DiagramChaseDatabase/views.py'),
                               {'attrib-starts': [],
                                'code-line': 'from django.shortcuts import render\r\n',
                                'first-line': 0,
                                'folded-linenos': [],
                                'sel-line': 0,
                                'sel-line-start': 0,
                                'selection_end': 0,
                                'selection_start': 0,
                                'zoom': 0}),
                              (loc('../../../../../../Python38/Lib/site-packages/gqlalchemy/exceptions.py'),
                               {'attrib-starts': [('connection_handler|0|',
        211),
        ('connection_handler|0|._handler|0|',
         225)],
                                'code-line': '                    raise GQLAlchemyWaitForConnectionError from ex\n',
                                'first-line': 206,
                                'folded-linenos': [],
                                'sel-line': 234,
                                'sel-line-start': 7246,
                                'selection_end': 7246,
                                'selection_start': 7246,
                                'zoom': 0}),
                              (loc('database/memgraph_conn.py'),
                               {'attrib-starts': [],
                                'code-line': 'def get_memgraph(request=None):\r\n',
                                'first-line': 0,
                                'folded-linenos': [],
                                'sel-line': 9,
                                'sel-line-start': 319,
                                'selection_end': 335,
                                'selection_start': 323,
                                'zoom': 0}),
                              (loc('database/models.py'),
                               {'attrib-starts': [],
                                'code-line': 'class Model:  \r\n',
                                'first-line': 9,
                                'folded-linenos': [],
                                'sel-line': 5,
                                'sel-line-start': 126,
                                'selection_end': 137,
                                'selection_start': 137,
                                'zoom': 6}),
                              (loc('DiagramChaseDatabase/settings.py'),
                               {'attrib-starts': [],
                                'code-line': 'MAX_LATEX_LENGTH=64',
                                'first-line': 120,
                                'folded-linenos': [],
                                'sel-line': 136,
                                'sel-line-start': 3719,
                                'selection_end': 3738,
                                'selection_start': 3738,
                                'zoom': 0}),
                              (loc('DiagramChaseDatabase/urls.py'),
                               {'attrib-starts': [],
                                'code-line': 'from database.views import test_memgraph\r\n',
                                'first-line': 0,
                                'folded-linenos': [],
                                'sel-line': 20,
                                'sel-line-start': 840,
                                'selection_end': 871,
                                'selection_start': 871,
                                'zoom': 0})],
        'has-focus': False,
        'locked': False},
        [loc('../../../../../../Python38/Lib/site-packages/gqlalchemy/connection.py'),
         loc('database/views.py'),
         loc('../../../../../../Python38/Lib/site-packages/gqlalchemy/query_builders/declarative_base.py'),
         loc('DiagramChaseDatabase/views.py'),
         loc('../../../../../../Python38/Lib/site-packages/gqlalchemy/exceptions.py'),
         loc('database/memgraph_conn.py'),
         loc('database/models.py'),
         loc('DiagramChaseDatabase/settings.py'),
         loc('DiagramChaseDatabase/urls.py')]),
                               'open_files': ['../../../../../../Python38/Lib/site-packages/gqlalchemy/connection.py',
        '../../../../../../Python38/Lib/site-packages/gqlalchemy/exceptions.py',
        '../../../../../../Python38/Lib/site-packages/gqlalchemy/query_builders/declarative_base.py',
        'DiagramChaseDatabase/settings.py',
        'DiagramChaseDatabase/urls.py',
        'DiagramChaseDatabase/views.py',
        'database/views.py',
        'database/memgraph_conn.py',
        'database/models.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.3348982785602504},
        'splits': 2,
        'tab_location': 'top',
        'traversal_pos': ((1,
                           0),
                          1674498691.6849196),
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {0: 0.5163398692810458},
                 'splits': 2,
                 'tab_location': 'left',
                 'traversal_pos': ((0,
                                    0),
                                   1674465911.167928),
                 'user_data': {}},
        'window-alloc': (320,
                         30,
                         1151,
                         788)}]}
guimgr.recent-documents = [loc('database/models.py'),
                           loc('database/memgraph_conn.py'),
                           loc('database/views.py')]
guimgr.visual-state = {loc('../../../../../../Python38/Lib/os.py'): {'attrib-starts': [('_Environ|0|',
        657),
        ('_Environ|0|.__getitem__|0|',
         667)],
        'code-line': '            raise KeyError(key) from None\r\n',
        'first-line': 638,
        'folded-linenos': [],
        'sel-line': 672,
        'sel-line-start': 24519,
        'selection_end': 24519,
        'selection_start': 24519,
        'zoom': 0},
                       loc('../../../../../../Python38/Lib/site-packages/gqlalchemy/exceptions.py'): {'attrib-starts': [('connection_handler|0|',
        211),
        ('connection_handler|0|._handler|0|',
         225)],
        'code-line': '                    raise GQLAlchemyWaitForConnectionError from ex\n',
        'first-line': 206,
        'folded-linenos': [],
        'sel-line': 234,
        'sel-line-start': 7246,
        'selection_end': 7246,
        'selection_start': 7246,
        'zoom': 0},
                       loc('DiagramChaseDatabase/static/css/styles.css'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('DiagramChaseDatabase/urls.py'): {'attrib-starts': [],
        'code-line': "    path('database/', connect_memgraph)\r\n",
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 27,
        'sel-line-start': 1101,
        'selection_end': 1140,
        'selection_start': 1140,
        'zoom': 0},
                       loc('cd_editor/templates/cd_editor.html'): {'attrib-starts': [],
        'code-line': '     </div>\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 68,
        'sel-line-start': 3790,
        'selection_end': 3801,
        'selection_start': 3801,
        'zoom': 0},
                       loc('cd_editor/templates/quiver_editor.html'): {'attrib-starts': [],
        'code-line': '{% load static %}\r\n',
        'first-line': 120,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('database/memgraph_conn.py'): {'attrib-starts': [],
        'code-line': '   print(mg)',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 15,
        'sel-line-start': 421,
        'selection_end': 432,
        'selection_start': 432,
        'zoom': 0},
                       loc('database/models.py'): {'attrib-starts': [],
        'code-line': 'from django.db import models\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('database/views.py'): {'attrib-starts': [('connect_memgraph|0|',
        6)],
        'code-line': '   return render(request)\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 17,
        'sel-line-start': 574,
        'selection_end': 577,
        'selection_start': 577,
        'zoom': 0},
                       loc('static/DiagramChaseDatabase/css/styles.css'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0}}
proj.build-cmd = {None: ('default',
                         None)}
proj.env-vars = {None: ('custom',
                        ['DJANGO_SITENAME=DiagramChaseDatabase',
                         'DJANGO_SETTINGS_MODULE=${DJANGO_SITENAME}.settings',
                         'PYTHONSTARTUP_CODE=import django; django.setup()',
                         'MEMGRAPH_HOST=52.53.185.179',
                         'MEMGRAPH_PORT=7687',
                         'MEMGRAPH_USERNAME=fruitfulapproach@gmail.com',
                         'MEMGRAPH_PASSWORD=LunaMoona12340235ShebaHut$$$'])}
proj.ptype = 'django'
proj.pypath = {None: ('custom',
                      ['c:\\Users\\fruit\\OneDrive\\Desktop',
                       'c:\\Users\\fruit\\OneDrive\\Desktop\\DiagramChaseDatabase'])}
proj.test-launch-config = {None: ('project',
                                  ('',
                                   'launch-K6A8CrNeEIvxI9X9'))}
proj.vcs-system-config = ('prefs',
                          {'cvs': {'versioncontrol.cvs.active': 'active-if-project-dir',
                                   'versioncontrol.cvs.executable': 'cvs',
                                   'versioncontrol.cvs.extra-global-args': '-z3'},
                           'git': {'versioncontrol.git.active': 'active-if-project-dir',
                                   'versioncontrol.git.executable': 'git',
                                   'versioncontrol.git.use-porcelain': True},
                           'hg': {'versioncontrol.hg.active': 'active-if-project-dir',
                                  'versioncontrol.hg.dont-find-unregistered': True,
                                  'versioncontrol.hg.executable': 'hg',
                                  'versioncontrol.hg.extra-global-args': '--encoding=utf8'},
                           'perforce': {'versioncontrol.perforce.active': 'not-active',
        'versioncontrol.perforce.dont-find-unregistered': True,
        'versioncontrol.perforce.executable': 'p4',
        'versioncontrol.perforce.extra-global-args': ''},
                           'svn': {'versioncontrol.svn.active': 'active-if-project-dir',
                                   'versioncontrol.svn.executable': 'svn',
                                   'versioncontrol.svn.extra-global-args': '',
                                   'versioncontrol.svn.svnadmin-executable': 'svnadmin'}})
search.search-history = ['relationship',
                         'frame',
                         'iframe\\\\',
                         'static',
                         'pencil',
                         'dirs',
                         'app']
testing.stored-results = (1,
                          [],
                          {})
